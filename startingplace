Replicate County Health Rankings & Roadmaps data tool, but in a way that's free, self-hosted, and sustainable using R Shiny, GitHub for versioned data/scripts, and possibly APIs or scrapers for the latest data.

## GOALS

1. **Create a Shiny app** that:

   * Lets users select a **year** and a **county**.
   * Shows a snapshot of county-level health metrics.
   * For the **most recent year**, pulls fresh data from the web and computes measures using scripts in your GitHub repo. (STRETCH GOAL)
   * For **prior years**, pulls stored, versioned data from GitHub.

2. Ensure the app is **self-sustaining post-grant**:

   * Hosted on a free/low-cost platform (e.g., Shinyapps.io free tier or self-hosted).
   * Automated data updates. (STRETCH GOAL)
   * Easy to maintain and update.

---

##️ FILE & REPO STRUCTURE

**GitHub Repository:**

```
county-health-dashboard/
│
├── data/
│   ├── 2025/
│   ├── 2024/
│   ├── 2023/
│   └── ...
│
├── scripts/
│   ├── get_latest_data.R      # Scrapes/pulls latest data
│   ├── calculate_metrics.R    # Applies metric calculations
│   └── utils.R
│
├── app/
│   ├── app.R                  # Shiny app main file
│   ├── ui.R
│   └── server.R
│
├── README.md
└── .gitignore
```

---

## SHINY APP FUNCTIONALITY

### UI

* Dropdown to **select year** (e.g., 2023, 2024, "Latest").
* Dropdown to **select county**.
* Display:

  * Snapshot data
  * Maybe add visualizations (e.g., trend graphs, maps, etc) at some point 
  * Sense-making statements 

### Server

* If `"Latest"` is selected:

  * Run `get_latest_data.R` to download fresh data.
  * Run `calculate_metrics.R` to process it.
* If prior year selected:

  * Load pre-processed `.csv` or `.rds` from `/data/<year>/`.
* Display data accordingly.



## For long-term sustainability

* Add download button to export snapshot (PDF, CSV).
* Enable map-based county selection.
* Add tooltips or glossary of health indicators.
